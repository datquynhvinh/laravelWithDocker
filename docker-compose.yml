version: '3.8'

networks:
    app-network:
        driver: bridge
        name: ${APP_NAME}-network
volumes:
    db-mysql:
        driver: local

services:
    app:
        container_name: ${APP_NAME}-app
        build:
            context: ./docker/php
            dockerfile: Dockerfile
            args:
                PHP_VERSION: ${PHP_VERSION}
                APP_NAME: ${APP_NAME}
        restart: unless-stopped
        volumes:
            - ./:/var/www/html
            - ./docker/php/php.ini:/usr/local/etc/php/php.ini
        networks:
            - app-network
    webserver:
        image: nginx:${NGINX_VERSION}-alpine
        container_name: ${APP_NAME}-webserver
        depends_on:
            - app
        ports:
            - ${HTTP_PORT}:80
            - ${HTTPS_PORT}:443
        volumes:
            - ./:/var/www/html
            - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
            - ./docker/nginx/.htpasswd:/etc/nginx/.htpasswd
        restart: unless-stopped
        networks:
            - app-network
    db:
        image: mysql:${DB_VERSION}
        container_name: ${APP_NAME}-db
        restart: unless-stopped
        ports:
            - 3310:3306
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
        volumes:
            - db-mysql:/var/lib/mysql
        networks:
            - app-network
    redis:
        image: redis:alpine
        container_name: ${APP_NAME}-redis
        restart: unless-stopped
        volumes:
            - .docker/redis:/data
        ports:
            - "8090:6379"
        networks:
            - app-network
